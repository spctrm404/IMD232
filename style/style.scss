@use 'sass:map';
@use './variables';

*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  @include variables.lt-bp('md') {
    @include variables.get-type('mobile', 'body');
  }

  @include variables.get-type('desktop', 'body');

  overflow: hidden;

  margin: 0;

  font-family: 'Spoqa Han Sans Neo', sans-serif;
  font-weight: 500;
  color: var(--neutral-90);

  background-color: var(--neutral-10);
}

@for $i from 1 through 6 {
  h#{$i} {
    $key: 'heading-' + #{$i};

    @include variables.lt-bp('md') {
      @include variables.get-type('mobile', $key);
    }

    @include variables.get-type('desktop', $key);

    text-wrap: balance;
    word-break: keep-all;
    overflow-wrap: break-word;
  }
}

p {
  @include variables.lt-bp('md') {
    @include variables.get-type('mobile', 'body');

    max-width: 93ch;
  }

  @include variables.lt-bp('sm') {
    word-break: break-all;
    overflow-wrap: anywhere;
  }

  @include variables.get-type('desktop', 'body');

  max-width: 93ch;
  word-break: keep-all;
  overflow-wrap: break-word;
}

img,
svg,
canvas,
video {
  display: block;
  max-width: 100%;
}

.viewport {
  overflow-x: auto;
  overflow-y: scroll;
  height: 100dvh;
}

.container {
  @include variables.lt-bp('lg') {
    padding-inline: map.get(variables.$container-px, 'lg');
  }

  @include variables.lt-bp('md') {
    padding-inline: map.get(variables.$container-px, 'md');
  }

  @include variables.lt-bp('sm') {
    padding-inline: map.get(variables.$container-px, 'sm');
  }

  max-width: map.get(variables.$bp, 'xl');
  margin-inline: auto;
  padding-inline: map.get(variables.$container-px, 'xl');
}
