@use 'sass:list';
@use 'sass:map';

:root {
  @for $i from 0 through 100 {
    --neutral-#{$i}: oklch(#{$i}% 0.01 0deg);
  }
}

$font-size-ref: (
  -4: 0.5625rem,
  -3: 0.625rem,
  -2: 0.6875rem,
  -1: 0.75rem,
  0: 0.875rem,
  1: 1rem,
  2: 1.125rem,
  3: 1.25rem,
  4: 1.375rem,
  5: 1.5625rem,
  6: 1.75rem,
  7: 2rem,
  8: 2.25rem,
  9: 2.5rem,
  10: 2.8125rem,
  11: 3.1875rem,
  12: 3.625rem,
  13: 4.0625rem,
  14: 4.5625rem,
  15: 5.125rem,
  16: 5.75rem
);
$line-height-ref: (
  -4: 1rem,
  -3: 1.125rem,
  -2: 1.125rem,
  -1: 1.25rem,
  0: 1.5rem,
  1: 1.75rem,
  2: 1.875rem,
  3: 2.125rem,
  4: 2.375rem,
  5: 2.625rem,
  6: 3rem,
  7: 3.375rem,
  8: 3.875rem,
  9: 4.25rem,
  10: 4.75rem,
  11: 5.375rem,
  12: 6.125rem,
  13: 6.875rem,
  14: 7.75rem,
  15: 8.75rem,
  16: 9.75rem
);
$line-height-dense-ref: (
  -4: 0.875rem,
  -3: 1rem,
  -2: 1rem,
  -1: 1.125rem,
  0: 1.375rem,
  1: 1.5rem,
  2: 1.625rem,
  3: 1.875rem,
  4: 2rem,
  5: 2.25rem,
  6: 2.5rem,
  7: 2.875rem,
  8: 3.125rem,
  9: 3.5rem,
  10: 3.875rem,
  11: 4.375rem,
  12: 4.875rem,
  13: 5.375rem,
  14: 6rem,
  15: 6.75rem,
  16: 7.5rem
);
$type-hierarchy: (
  'mobile': (
    'label': 0,
    'body-sm': 0,
    'body': 1,
    'body-lg': 2,
    'heading-6': 3,
    'heading-5': 4,
    'heading-4': 5,
    'heading-3': 6,
    'heading-2': 7,
    'heading-1': 8,
  ),
  'desktop': (
    'label': 0,
    'body-sm': 1,
    'body': 2,
    'body-lg': 3,
    'heading-6': 5,
    'heading-5': 7,
    'heading-4': 9,
    'heading-3': 11,
    'heading-2': 13,
    'heading-1': 15,
  ),
);

@mixin get-type($device, $key, $isDense: false) {
  $type-hierarchy-map: map.get($type-hierarchy, $device);
  $idx: map.get($type-hierarchy-map, $key);

  font-size: map.get($font-size-ref, $idx);

  @if $isDense {
    line-height: map.get($line-height-dense-ref, $idx);
  } @else {
    line-height: map.get($line-height-ref, $idx);
  }
}

$bp: (
  'sm': 20rem,
  'md': 40rem,
  'lg': 60rem,
  'xl': 80rem,
);
$bp-list: (
  map.get($bp, 'sm'),
  map.get($bp, 'md'),
  map.get($bp, 'lg'),
  map.get($bp, 'xl')
);
$container-px: (
  'sm': 1rem,
  'md': 2rem,
  'lg': 3rem,
  'xl': 4rem,
);

@mixin eq-bp($key) {
  $bp-val-min: map.get($bp, $key);
  $bp-val-max-idx: list.index($bp-list, $bp-val-min) + 1;
  $bp-val-max: list.nth($bp-list, $bp-val-max-idx);

  @at-root {
    @media (width < $bp-val-max) and (width >= $bp-val-min) {
      & {
        @content;
      }
    }
  }
}

@mixin gt-bp($key) {
  $bp-val-min: map.get($bp, $key);

  @at-root {
    @media (width >= $bp-val-min) {
      & {
        @content;
      }
    }
  }
}

@mixin lt-bp($key) {
  $bp-val-min: map.get($bp, $key);
  $bp-val-max-idx: list.index($bp-list, $bp-val-min) + 1;
  $bp-val-max: list.nth($bp-list, $bp-val-max-idx);

  @at-root {
    @media (width < $bp-val-max) {
      & {
        @content;
      }
    }
  }
}
